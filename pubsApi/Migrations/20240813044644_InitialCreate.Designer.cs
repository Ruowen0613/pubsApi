// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pubsApi.Models;

#nullable disable

namespace pubsApi.Migrations
{
    [DbContext(typeof(PubsContext))]
    [Migration("20240813044644_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PubsApi.Models.Author", b =>
                {
                    b.Property<string>("Au_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Au_fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Au_lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Contract")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Au_id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("PubsApi.Models.TitleAuthor", b =>
                {
                    b.Property<string>("Au_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Author_order")
                        .HasColumnType("int");

                    b.Property<int?>("Royaltyper")
                        .HasColumnType("int");

                    b.HasKey("Au_id", "Title_id");

                    b.HasIndex("Title_id");

                    b.ToTable("TitleAuthors");
                });

            modelBuilder.Entity("pubsApi.Models.Title", b =>
                {
                    b.Property<string>("title_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("advance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pub_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("pubdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("royalty")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ytd_sales")
                        .HasColumnType("int");

                    b.HasKey("title_id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("PubsApi.Models.TitleAuthor", b =>
                {
                    b.HasOne("PubsApi.Models.Author", "Author")
                        .WithMany("TitleAuthors")
                        .HasForeignKey("Au_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pubsApi.Models.Title", "Title")
                        .WithMany("TitleAuthors")
                        .HasForeignKey("Title_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("PubsApi.Models.Author", b =>
                {
                    b.Navigation("TitleAuthors");
                });

            modelBuilder.Entity("pubsApi.Models.Title", b =>
                {
                    b.Navigation("TitleAuthors");
                });
#pragma warning restore 612, 618
        }
    }
}
